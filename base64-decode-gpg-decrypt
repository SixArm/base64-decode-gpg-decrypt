#!/bin/sh

##
# Command to decode and decrypt a base64-encoded GPG-encrypted message.
#
# Example:
#
#     $ cat message.txt | base64-decode-gpg-decrypt
#     hello world
#
# ## Implementation
#
# This script uses the commands `base64`, `gpg`, and `tty`.
#
# This implementation sets GPG TTY to the current `tty`,
# which sets GPG to prompt for the password by using the
# user's current terminal (rather than the system's GUI).
#
# If you prefer to use a diffferent GPG prompt, then you
# can edit this script, and also please let send feedback
# to us so we can learn more ways to work on this script.
#
# ## For macOS and brew
#
# If you use macOS and brew then you can install the
# commands and configure them such as:
#
#     brew install gpg2
#     brew install pinentry-mac
#     echo "pinentry-program /usr/local/bin/pinentry-mac" >> ~/.gnupg/gpg-agent.conf
#
# If you want to ensure that GPG always uses your TTY,
# then you can add these lines to your environment configuration,
# such as the file `~/.bashrc` or `~/.zshenv`:
#
#     GPG_TTY=$(tty)
#     export GPG_TTY
#
# It is important that the GPG_TTY environment variable 
# always matches the output of the tty command. 
# For W32 systems this option is not required.
#
# ## Tracking
#
# Command: base64-decode-gpg-decrypt
# Version: 1.0.0
# Created: 2020-03-25
# Updated: 2020-03-29
# License: GPL
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
##
set -euf
base64 --decode | GPG_TTY=$(tty) gpg --decrypt
